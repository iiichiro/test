// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.27;

import "@openzeppelin/contracts/access/Ownable.sol";
import "@openzeppelin/contracts/token/ERC721/ERC721.sol";
import "@openzeppelin/contracts/utils/Counters.sol";
import "@openzeppelin/contracts/utils/Base64.sol";
import "@openzeppelin/contracts/utils/Strings.sol";

contract OnChainNFTExample is Ownable, ERC721 {
    using Counters for Counters.Counter;
    Counters.Counter private _tokenIdCounter;

    constructor() ERC721("Random Color Circle", "RCC") {}

    /**
     * NFTのtokenIdに対応するカラーコードの取得
     * @param tokenId トークンID
     */
    function getColorCodeFromTokenId(uint256 tokenId) internal view returns (string memory) {
      uint256 randomValue = uint256(keccak256(abi.encodePacked(tokenId, ownerOf(tokenId))));
      return toColorCode(randomValue);
    }

    /**
     * カラーコード（#NNNNNN）への変換関数
     * @param colorValue カラーコード変換用uint256データ
     */
    function toColorCode(uint256 colorValue) internal pure returns (string memory) {
      bytes memory buffer = new bytes(7);
      buffer[0] = '#';
      for (uint256 i = 0; i < 3; i++) {
        uint256 val = (colorValue >> (i * 8)) & 0xFF;
        buffer[6 - i * 2] = _toHexChar(val & 0xF);
        buffer[5 - i * 2] = _toHexChar((val >> 4) & 0xF);
      }

      return string(buffer);
    }

    /**
     * 16進数表記への変換関数
     * @param val 変換対象uint256データ
     */
    function _toHexChar(uint256 val) internal pure returns (bytes1) {
      if (val < 10) {
        return bytes1(uint8(val + 48));
      } else {
        return bytes1(uint8(val + 87));
      }
    }

    /**
     * カラーコードを反転する関数
     * @param colorCode 反転したいカラーコード（#NNNNNN形式）
     */
    function invertColorCode(string memory colorCode) public pure returns (string memory) {
        bytes memory buffer = bytes(colorCode);
        require(buffer.length == 7, "Invalid color code length"); // #NNNNNNの形式であることを確認

        // 反転後のカラーコードを格納するバッファを作成
        bytes memory invertedBuffer = new bytes(7);
        invertedBuffer[0] = '#';

        // 各成分（赤、緑、青）を反転
        for (uint256 i = 1; i < 7; i += 2) {
            // 16進数を整数に変換し、反転
            uint8 highNibble = _fromHexChar(buffer[i]);
            uint8 lowNibble = _fromHexChar(buffer[i + 1]);
            uint8 inverted = 255 - ((highNibble << 4) | lowNibble);
            
            // 反転した値を16進数文字に変換し、バッファに追加
            invertedBuffer[i] = _toHexChar(inverted >> 4);
            invertedBuffer[i + 1] = _toHexChar(inverted & 0xF);
        }

        return string(invertedBuffer);
    }

    /**
     * 16進数文字を数値に変換する関数
     * @param char 16進数文字
     */
    function _fromHexChar(bytes1 char) internal pure returns (uint8) {
        if (uint8(char) >= 48 && uint8(char) <= 57) {
            return uint8(char) - 48;
        } else if (uint8(char) >= 97 && uint8(char) <= 102) {
            return uint8(char) - 87;
        } else if (uint8(char) >= 65 && uint8(char) <= 70) {
            return uint8(char) - 55;
        } else {
            revert("Invalid hex character");
        }
    }

    /**
     * 画像生成用関数
     * @param tokenId トークンID
     */ 
    function generateImage(uint256 tokenId) private view returns (string memory) {
        // 円の色
        string memory color = getColorCodeFromTokenId(tokenId);
        // 文字の色
        string memory invertedColor = invertColorCode(color);

        // 画像データ
        string memory svgTag = string(
          abi.encodePacked(
            '<svg viewBox="0 0 100 100" width="100" height="100" fill="none" xmlns="http://www.w3.org/2000/svg">',
            '<circle cx="50" cy="50" r="40" fill="',
            color,
            '" />',
            '<text x="50" y="53" text-anchor="middle" fill="',
            invertedColor,
            '" font-weight="bold" font-family="Arial" font-size="8">',
            'Circle',
            '</text>',
            '</svg>'
          )
        );
        bytes memory imageData = abi.encodePacked(
            "data:image/svg+xml;base64,",
            Base64.encode(bytes(svgTag))
        );

        return string(imageData);
    }

    /**
     * NFT発行用関数
     */
    function mintNFT() public payable {
        require(msg.value == 0.05 ether, "Payment must be 0.05 ETH");

        uint256 tokenId = _tokenIdCounter.current();
        _tokenIdCounter.increment();

        _safeMint(msg.sender, tokenId);
    }

    /**
     * NFT URLの取得
     * Tips: base64のDataURL形式
     * @param tokenId トークンID
     */
    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {
        _requireMinted(tokenId);

        string memory image = generateImage(tokenId);

        // メタデータ設定
        string memory uri = string(abi.encodePacked(
            'data:application/json;base64,',
            Base64.encode(bytes(
                string(abi.encodePacked(
                    '{',
                    '"name": "NFT Generator #',
                    Strings.toString(tokenId),
                    '",',
                    '"description": "NFT generated with a simple color.",',
                    '"image": "',
                    image,
                    '"',
                    '}'
                ))
            ))
        ));

        return uri;
    }

    /**
     * コントラクトのETHをオーナーが引き出すための関数
     */
    function withdraw() external onlyOwner {
        payable(_msgSender()).transfer(address(this).balance);
    }
}
