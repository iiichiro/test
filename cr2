/**
 * string⇒number
 * @param {string} str 文字列
 * @returns {number} 数値 
 */
 function convertNum(str) {
    return Number(str);
};

/**
 * string⇒boolean
 * 'true'という文字列（大文字・小文字問わず）の場合、true
 * それ以外の場合、false
 * @param {string} str 文字列
 * @returns {boolean} 真偽値
 */
function convertBoolean(str) {
    return (str && str.toLowerCase() === 'true');
}

/**
 * string⇒Date
 * @param {string} str 文字列
 * @returns {Date} Date
 */
function convertDate(str) {
    return new Date(str);
}

/**
 * DB名
 * @type {string}
 */
const DB_NAME = 'CsvData';

/**
 * バージョン（整数のみ）
 * @type {number}
 */
const DB_VERSION = 8;

/**
 * オブジェクトストア設定一覧
 * @type {{
 *   [storeName: string]: {  // 
 *     columnConverter?: { [column: string]: (str) => any }
 *     storeOption     : { keyPath: string | string[], autoIncrement: boolean }
 *     indexes         : { indexName: string, keyPath: string | string[], objParams: any }[]
 *   }
 * }}
 */
const storeSettings = {
    'Store1': {
        columnConverter: { hoge: convertNum, fuga: convertDate, piyo: convertBoolean },
        storeOption: { keyPath: 'hoge', autoIncrement: false },
        indexes: [
            { indexName: 'fuga', keyPath: 'fuga', objParams: { unique: true } }
        ]
    },
    'Store2': {
        columnConverter: { a: convertNum },
        storeOption: { keyPath: ['a','b'], autoIncrement: false }
    }
};

/**
 * CSV文字列⇒カンマで分割した文字列配列
 * @param {string} line CSV1行 
 * @returns {string[]}
 */
function splitCsvLine(line) {
    return line
            // カンマ区切り
            .split(/,(?=(?:[^"]*"[^"]*")*[^"]*$)/)
            // ダブルクォーテーションの処理
            .map(s => s.replace(/^"/, '').replace(/"$/, '').replace(/"{2,}/, '"'));
}

/**
 * オブジェクト⇒CSV文字列
 * @param {string[]} columns カラム 
 * @param {any} data オブジェクト
 * @returns CSV文字列
 */
function joinCsvLine(columns, data = null) {
    const separator = ',';  // 区切り文字
    const result = [];
    for (let i=0; i < columns.length; i++) {
        let needsDoubleQuotation = false;

        let item;
        if (data == null) {
            item = columns[i];
        } else {
            item = String(data[columns[i]]);
        }

        // カンマもしくは改行がある場合
        if (item.includes(',') || item.includes('\n')) {
            needsDoubleQuotation = true;
        }

        // 値にダブルクォーテーションが含まれている場合
        if (item.includes('"')) {
            // 連続したダブルクォーテーションに変更
            item = item.replace('"', '""')
            needsDoubleQuotation = true;
        }

        // ダブルクォーテーションで囲む必要がある場合
        if (needsDoubleQuotation) {
            item = `"${item}"`;
        }

        result.push(item);
    }

    return result.join(separator);
}

function toCsvData(storeDataMap) {
    const result = [];

    const entries = Object.entries(storeDataMap);
    for (let i = 0; i < entries.length; i++) {
        const [storeName, objects] = entries[i];
        if (objects.length === 0) {
            continue;  // TODO
        }
        const columns = Object.keys(objects[0]);

        result.push(storeName);
        result.push(joinCsvLine(columns));
        for (let j = 0; j < objects.length; j++) {
            result.push(joinCsvLine(columns, objects[j]));
        }
        result.push('[EOF]');
    }

    return result.join('\r\n');
}

/**
 * カンマ分割文字列配列⇒オブジェクト
 * @param {string[]} columns カラム
 * @param {string[]} data カンマ分割文字列配列
 * @param {{[column: string]: (string) => any}} converter コンバータ
 * @returns {{[column: string]: any}} 値はコンバータ依存（コンバータ未指定の場合はstring）
 */
function convertArray2Object(columns, data, converter = null) {
    if (converter == null) {
        converter = {};
    }

    const result = [];
    if (columns.length !== data.length) {
        // カラムとデータの不一致
        throw `カラム数とデータ数が不一致です. \nカラム数: ${columns.length}\nデータ数: ${data.length}`;  // TODO
    }

    for (let i = 0; i < columns.length; i++) {
        conv = converter[columns[i]] || ((str) => { return str });
        result[i] = [columns[i], conv(data[i])];
    }
    return Object.fromEntries(result);
}

function analysisCsvFiles() {
    return new Promise((resolve, reject) => {
        const fileSelector = document.getElementById("file-selector");
        if (fileSelector == null || fileSelector.files == null || fileSelector.files.length === 0) {
            alert("CSVファイルを選択してください.");
            reject();
            return;
        }

        const fileReader = new FileReader();
        const storeDataMap = {};

        // CSVデータの解析処理
        // ストア名およびIndexedDBへ登録するオブジェクト群を作成
        fileReader.onload = () => {
            const fileContents = fileReader.result;
            const stores = fileContents.split(/^\[EOF\]$/m).filter(Boolean);

            stores.map(store => {
                const lines = store.trim().split("\r\n").filter(Boolean);
                if (lines.length === 0) {
                    return;
                }
                
                const storeName = lines.shift();
                if (!(storeName in storeSettings)) {
                    console.warn(`未定義のストア名です. スキップします.\n該当ストア名: ${storeName}`);
                    // reject();
                    return;
                }
                if (!Object.keys(storeDataMap).includes(storeName)) {
                    storeDataMap[storeName] = [];
                }
                const converter = storeSettings[storeName].columnConverter || {};

                const columnsStr = lines.shift()
                const columns = splitCsvLine(columnsStr);
                console.log("col: ", columns);

                lines.forEach(line => {
                    const data = splitCsvLine(line);
                    console.log("data: ", data);
                    let obj;
                    try {
                        obj = convertArray2Object(columns, data, converter);
                    } catch(err) {
                        console.error(
                            `エラーが発生しました. スキップします. \n${err}\nストア名: ${storeName}\nカラム: ${columnsStr}\n該当データ: ${line}`);
                    }
                    storeDataMap[storeName].push(obj);
                });
            });
        };

        // CSVデータの解析終了後
        fileReader.onloadend = () => {
            resolve(storeDataMap);
        };

        // ファイルの読込
        const files = fileSelector.files;
        let file;
        for (let i=0; i < files.length; i++) {
            file = files[i];
            fileReader.readAsText(file);
        }
    });
}

/**
 * CSVデータのインポート
 * CSVデータ⇒IndexedDB
 */
async function importCsvData() {
    console.log("start");
    const storeDataMap = await analysisCsvFiles();
    const db = await openIDB();
    await insertIDB(db, storeDataMap);
    console.log("end");
}

function initIDB(db) {
    db.onerror = (event) => {
        console.warn('IndexedDBの作成に失敗しました.');
        throw event.target.error;
    };

    // 各種オブジェクトストアの作成
    Object.keys(storeSettings).forEach((key) => {
        let storeSetting = storeSettings[key];
        try {
            if (!db.objectStoreNames.contains(key)) {
                const store = db.createObjectStore(key, storeSetting.storeOption);
                console.debug(`ストア名: ${store} を作成しました. `);
            } else {
                console.debug(`ストア名: ${store} は既に存在しています. `);
            }
        } catch(err) {
            console.warn(err);
        }
    });
}

function openIDB() {
    return new Promise((resolve, reject) => {
        const req = window.indexedDB.open(DB_NAME, DB_VERSION);
        req.onupgradeneeded = (event) => {
            initIDB(event.target.result);
            console.log('ok');
        };
        
        req.onsuccess = (event) => {
            resolve(event.target.result);
        };

        req.onerror = (event) => {
            reject(event.target.error);
        };
    });
}

async function testIDB() {
    const db = await openIDB();

    console.log(db);
}

function insert(objStore, obj) {
    return new Promise((resolve, reject) => {
        const req = objStore.add(obj);
        req.onsuccess = (event) => {
            console.debug('Success: ', obj);
            resolve();
        };

        req.onerror = (event) => {
            if (req.error.name === 'ConstraintError') {
                // 既に同じキーのデータが存在する場合は上書きする
                console.warn(`キーの重複がありました. 既存データを上書きします.`);
                event.preventDefault();
            } else {
                // 想定外のエラー
                console.debug('Error: ', obj);
                console.error('予期せぬエラーが発生しました.', req?.error);
                reject();
            }
        };
    });
}

/**
 * IndexedDBへのデータ追加
 * @param {{[storeName: string]: any[]}} storeDataMap キー=ストア名, 値=オブジェクト一覧
 */
async function insertIDB(db, storeDataMap) {
    // 登録処理
    const requests = Object.entries(storeDataMap).filter((item) => {
        const [storeName, objects] = item;
        if (!(storeName in storeSettings)) {
            console.warn(`未定義のストア名です. スキップします.\n該当ストア名: ${storeName}`);
            return false;
        }
        return true;
    }).map((item) => {
        const [storeName, objects] = item;

        return new Promise((resolve, reject) => {
            const transaction = db.transaction(storeName, 'readwrite');
            const objStore = transaction.objectStore(storeName);
    
            const requests = objects.map(obj => {
                return insert(objStore, obj);
            });
    
            Promise.allSettled(requests).then(() => {
                resolve();
            }).catch(() => {
                reject();
            });
        });        
    });

    await Promise.allSettled(requests);
}

function getAll(db, stores) {
    const storeDataMap = {};

    const requests = stores.map(store => {
        return new Promise((resolve, reject) => {
            const transaction = db.transaction(store, 'readonly');
            const objStore = transaction.objectStore(store);

            const req = objStore.getAll();

            req.onsuccess = (event) => {
                storeDataMap[store] = event.target.result;
                resolve();
            };
            req.onerror = (event) => {
                reject(event.target.error);
            };
        });
    });

    return Promise.allSettled(requests).then(() => { return storeDataMap });
}

/**
 * CSVデータのエクスポート
 * IndexedDB⇒CSVデータ
 */
async function exportCsvData() {
    console.log("start");
    const db = await openIDB();
    const stores = Object.keys(storeSettings);  // TODO
    const storeDataMap = await getAll(db, stores);
    console.log(storeDataMap);

    const csvData = toCsvData(storeDataMap);
    console.log(csvData);
    console.log("end");
}