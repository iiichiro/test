#include <algorithm>
#include <iostream>
#include <fstream>
#include <sstream>
#include <istream>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <chrono>

std::vector<std::string> split(const std::string &input, char delimiter, std::set<int> &usecols)
{
    std::istringstream stream(input);
    std::string field;
    std::vector<std::string> result(usecols.size());

    int curr_idx = 0;
    int end_idx = *usecols.rbegin();
    int cnt = 0;
    while (std::getline(stream, field, delimiter))
    {
        if (usecols.find(curr_idx) != usecols.end())
        {
            if (field.empty())
            {
                break;
            }
            field.erase(
                std::remove(field.begin(), field.end(), '"'),
                field.end());
            result[cnt] = field;
            cnt++;
        }
        curr_idx++;
        if (curr_idx > end_idx)
        {
            break;
        }
    }
    return result;
}

void print_elapsed_time(std::chrono::system_clock::time_point st, std::chrono::system_clock::time_point ed)
{
    std::cout << std::chrono::duration_cast<std::chrono::milliseconds>(ed - st).count() << "[ms]" << std::endl;
}

/**
 * 会社（"company"）について、売り上げ（"trip_total"）の相対的なばらつきが最も大きい会社名を答えなさい。
 * なお、相対的なばらつきは「変動係数」を比較すること。また、会社名が欠損しているデータは除き集計すること。
 * [解答時間] 3h30m
 */
void q2()
{
    constexpr int company_idx = 16;
    constexpr int trip_total_idx = 14;
    std::set<int> usecols = {company_idx, trip_total_idx};

    // 対象ファイル
    std::ifstream ifs("../all.csv");
    // ファイル読み出し用
    std::string line;

    std::map<std::string, double> trip_total_mean;
    std::map<std::string, int> trip_total_count;
    std::map<std::string, double> trip_total_std;

    // ヘッダー飛ばし
    std::getline(ifs, line);
    // 平均（の前準備）およびデータ数の集計
    while (std::getline(ifs, line))
    {
        auto strvec = split(line, ',', usecols);
        if (std::any_of(strvec.begin(), strvec.end(), [](const auto &x) {
                return x.empty();
            }))
        {
            continue;
        }
        auto trip_total = std::stod(strvec[0]);
        trip_total_mean[strvec[1]] += trip_total;
        trip_total_count[strvec[1]]++;
    }

    // 平均計算
    for (const auto &x : trip_total_mean)
    {
        trip_total_mean[x.first] = x.second / trip_total_count[x.first];
    }

    // ファイルストリームを先頭に戻す
    ifs.clear();
    ifs.seekg(0, std::ios_base::beg);
    // ヘッダー飛ばし
    std::getline(ifs, line);
    // 標準偏差（の前準備）の集計
    while (std::getline(ifs, line))
    {
        auto strvec = split(line, ',', usecols);
        if (std::any_of(strvec.begin(), strvec.end(), [](const auto &x) {
                return x.empty();
            }))
        {
            continue;
        }
        auto trip_total = std::stod(strvec[0]);
        trip_total_std[strvec[1]] += pow((trip_total - trip_total_mean[strvec[1]]), 2) / trip_total_count[strvec[1]];
    }

    double max_cv = 0;
    std::string max_name;
    for (const auto &x : trip_total_std)
    {
        auto cv = pow(x.second, 0.5) / trip_total_mean[x.first]; // 変動係数
        if (max_cv < cv)
        {
            max_cv = cv;
            max_name = x.first;
        }
    }

    std::cout << max_name << ": " << max_cv << std::endl;
}

int main()
{
    q2();
    return 0;
}